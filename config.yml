# Nexus Game AI Framework Configuration
# SerpentAI Compatible Configuration File

nexus:
  version: "1.0.0"
  debug: false
  auto_reload: true
  plugin_dirs:
    - plugins
    - ~/.nexus/plugins
  
  # SerpentAI compatibility mode
  serpent_compat: true

# Frame capture configuration
capture:
  backend: "mss"  # Options: mss, dxcam, opencv, d3d
  device_idx: 0
  output_idx: null
  fps: 60
  buffer_size: 64
  region: null  # [x, y, width, height] or null for full screen
  
  # Frame processing
  preprocessing:
    resize: null  # [width, height] or null
    grayscale: false
    normalize: true

# Computer vision configuration  
vision:
  detection_model: "yolov8"  # Options: yolov8, yolov5, detectron2
  ocr_engine: "tesseract"  # Options: tesseract, easyocr
  confidence_threshold: 0.5
  gpu_enabled: true
  batch_size: 1
  
  # Object detection
  detection:
    nms_threshold: 0.45
    max_detections: 100
    
  # OCR settings
  ocr:
    language: "eng"
    psm: 3  # Page segmentation mode
    oem: 3  # OCR engine mode

# Agent configuration
agents:
  default_type: "scripted"  # Options: scripted, dqn, ppo, rainbow, llm
  max_buffer_size: 10000
  batch_size: 32
  learning_rate: 0.001
  
  # Reinforcement learning
  rl:
    gamma: 0.99
    epsilon: 1.0
    epsilon_min: 0.01
    epsilon_decay: 0.995
    
  # Training
  training:
    episodes: 1000
    steps_per_episode: 1000
    save_interval: 100

# Input controller configuration
input:
  backend: "pyautogui"  # Options: pyautogui, pynput, win32api
  human_like: true
  delay_range: [0.05, 0.15]
  mouse_speed: 1.0
  
  # Human-like behavior
  humanization:
    curve_type: "bezier"  # Options: bezier, sine, linear
    mistakes_enabled: false
    mistake_rate: 0.01

# API server configuration
api:
  enabled: true
  host: "127.0.0.1"
  port: 8000
  cors_enabled: true
  auth_enabled: false
  
  # WebSocket
  websocket:
    enabled: true
    port: 8001
    
  # Dashboard
  dashboard:
    enabled: true
    port: 3000

# Plugin system configuration
plugins:
  auto_discovery: true
  hot_reload: true
  sandboxed: false
  
  # Plugin directories
  search_paths:
    - ./plugins
    - ~/.nexus/plugins
    - /usr/share/nexus/plugins

# Logging configuration
logging:
  level: "INFO"  # Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
  format: "json"  # Options: json, text
  file: "nexus.log"
  console: true
  rotation: "1 day"
  max_bytes: 10485760  # 10MB
  backup_count: 5

# Performance configuration
performance:
  max_cpu_percent: 80
  max_memory_mb: 4096
  gpu_memory_fraction: 0.5
  profiling_enabled: false
  thread_pool_size: 4
  
  # Optimization
  optimization:
    frame_skip: 0
    lazy_loading: true
    cache_frames: true

# Game configuration
games:
  auto_detect: true
  window_title_patterns:
    - ".*Game.*"
    - ".*game.*"
  process_name_patterns:
    - "*.exe"
    
  # Game launchers
  launchers:
    steam:
      enabled: true
      install_path: null  # Auto-detect
    epic:
      enabled: true
      install_path: null
    executable:
      enabled: true

# Training configuration
training:
  save_interval: 1000
  log_interval: 100
  checkpoint_dir: "checkpoints"
  tensorboard_enabled: true
  
  # Experiment tracking
  tracking:
    backend: "wandb"  # Options: wandb, mlflow, tensorboard, none
    project: "nexus-game-ai"
    entity: null
    tags: []

# Dataset configuration
datasets:
  storage_format: "hdf5"  # Options: hdf5, zarr, lmdb, pytorch
  compression: "gzip"
  compression_level: 4
  chunk_size: 100
  
  # Data augmentation
  augmentation:
    enabled: false
    flip_horizontal: true
    flip_vertical: false
    rotation_range: 15
    zoom_range: 0.1
    brightness_range: 0.2

# Recording configuration
recording:
  output_dir: "recordings"
  format: "hdf5"  # Options: hdf5, pickle, numpy, video
  buffer_size: 1000
  compress: true
  
  # Recording options
  options:
    record_frames: true
    record_inputs: true
    record_rewards: true
    record_metadata: true
    
  # Video encoding (if format is video)
  video:
    codec: "mp4v"
    fps: 30
    quality: 95

# Visual debugger configuration
visual_debugger:
  enabled: true
  overlay_alpha: 0.7
  
  # Overlay options
  overlays:
    show_fps: true
    show_regions: true
    show_detections: true
    show_inputs: true
    show_metrics: true
    show_grid: false
    
  # Colors (BGR format)
  colors:
    fps: [0, 255, 0]
    region: [255, 255, 0]
    detection: [0, 255, 255]
    input: [255, 0, 255]
    metric: [255, 255, 255]
    grid: [128, 128, 128]

# Analytics configuration
analytics:
  enabled: false
  anonymous: true
  
  # Telemetry
  telemetry:
    performance_metrics: true
    usage_metrics: true
    error_reporting: true

# Redis configuration (optional - for SerpentAI compatibility)
redis:
  enabled: false  # Disabled by default as per user preference
  host: "localhost"
  port: 6379
  db: 0
  password: null
  
  # Frame storage
  frame_storage:
    max_frames: 1000
    ttl: 3600  # 1 hour

# WAMP/Crossbar configuration (optional)
wamp:
  enabled: false
  router_url: "ws://localhost:8080/ws"
  realm: "nexus"
  
  # Components
  components:
    analytics: true
    input_controller: true
    dashboard: true

# Development configuration
development:
  debug_mode: false
  verbose_logging: false
  profiling: false
  
  # Hot reload
  hot_reload:
    enabled: true
    watch_dirs:
      - nexus
      - plugins
    ignore_patterns:
      - "*.pyc"
      - "__pycache__"
      - ".git"

# Security configuration
security:
  sandbox_plugins: false
  validate_inputs: true
  max_request_size: 10485760  # 10MB
  
  # API security
  api_security:
    rate_limiting: true
    rate_limit: 100  # requests per minute
    api_key_required: false