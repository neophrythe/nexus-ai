[tool:pytest]
# Pytest configuration file

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    -v
    --tb=short
    --strict-markers
    --strict-config
    --cov=nexus
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80
    --asyncio-mode=auto

# Markers
markers =
    unit: Unit tests
    integration: Integration tests
    slow: Slow tests that may take a while
    gpu: Tests that require GPU
    network: Tests that require network access
    external: Tests that depend on external services
    
# Async configuration
asyncio_mode = auto

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:torch.*
    ignore::UserWarning:ultralytics.*

# Minimum version
minversion = 7.0

# Test timeout (in seconds)
timeout = 300

# Log configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage configuration
[coverage:run]
source = nexus
omit = 
    */tests/*
    */test_*
    setup.py
    nexus/cli.py
    nexus/main.py
    
[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod