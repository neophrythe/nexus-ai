[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nexus-game-ai"
version = "1.0.0"
description = "Nexus Game AI Framework - Modern successor to SerpentAI"
readme = "README.md"
authors = [
    {name = "Nexus Team", email = "nexus@example.com"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Games/Entertainment",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.10"
dependencies = [
    "numpy>=1.21.0",
    "opencv-python>=4.5.0",
    "pillow>=9.0.0",
    "mss>=6.1.0",
    "pyautogui>=0.9.53",
    "pynput>=1.7.0",
    "structlog>=21.5.0",
    "pyyaml>=6.0",
    "toml>=0.10.2",
    "watchdog>=2.1.0",
    "psutil>=5.9.0",
    "torch>=1.10.0",
    "torchvision>=0.11.0",
    "tensorflow>=2.8.0",
    "scikit-learn>=1.0.0",
    "gym>=0.21.0",
    "stable-baselines3>=1.5.0",
    "fastapi>=0.95.0",
    "uvicorn>=0.20.0",
    "websockets>=10.0",
    "aiofiles>=0.8.0",
    "httpx>=0.23.0",
    "h5py>=3.7.0",
    "zarr>=2.12.0",
    "lmdb>=1.3.0",
    "pytesseract>=0.3.10",
    "easyocr>=1.6.0",
    "ultralytics>=8.0.0",
    "segment-anything>=1.0",
    "transformers>=4.25.0",
    "wandb>=0.13.0",
    "mlflow>=2.0.0",
    "tensorboard>=2.11.0",
    "rich>=13.0.0",
    "click>=8.1.0",
    "questionary>=1.10.0",
    "pytest>=7.2.0",
    "pytest-asyncio>=0.20.0",
    "pytest-cov>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=0.990",
    "isort>=5.11.0",
    "pre-commit>=2.20.0",
]
redis = [
    "redis>=4.5.0",
    "hiredis>=2.2.0",
]
wamp = [
    "autobahn[asyncio]>=22.0.0",
    "crossbar>=22.0.0",
]
windows = [
    "pywin32>=305",
    "dxcam>=0.0.5",
]
linux = [
    "python-xlib>=0.31",
]

[project.urls]
Homepage = "https://github.com/nexus/nexus-game-ai"
Documentation = "https://nexus-game-ai.readthedocs.io"
Repository = "https://github.com/nexus/nexus-game-ai"
Issues = "https://github.com/nexus/nexus-game-ai/issues"

[project.scripts]
nexus = "nexus.cli.main:main"
serpent = "nexus.cli.main:serpent_compat"  # SerpentAI compatibility

[tool.setuptools.packages.find]
where = ["."]
include = ["nexus*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
nexus = [
    "*.yaml",
    "*.yml",
    "*.json",
    "templates/**/*",
    "data/**/*",
]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-ra -q --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["nexus"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "except ImportError:",
]